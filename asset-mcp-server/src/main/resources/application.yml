server:
  port: 8081

# Spring DataSource configuration for in-memory tests. The H2 database
# is used by default to avoid external dependencies. In production
# deployments you may override these settings via environment variables
# or a different configuration file (e.g. application-prod.yml).
spring:
  datasource:
    # Datasource URL provided via environment variables.  Use the DB_HOST,
    # DB_PORT and DB_NAME variables to assemble a sensible default if
    # DATASOURCE_URL is not explicitly set.  The default points to a
    # PostgreSQL instance on localhost.  See README for details on
    # configuring these values for containerised or managed databases.
    url: ${DATASOURCE_URL:jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:assetdb}}
    driver-class-name: ${DATASOURCE_DRIVER_CLASS_NAME:org.postgresql.Driver}
    username: ${DATASOURCE_USERNAME:asset}
    password: ${DATASOURCE_PASSWORD:asset}
  jpa:
    hibernate:
      ddl-auto: update
    open-in-view: false
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: https://login.microsoftonline.com/c07f229d-ff5a-4a54-9be4-1e37e3783cdd/v2.0

# Configuration for QR code handling.  The scan base URL is used
# when generating QR codes for new assets; the codes will direct the
# browser to this URL with the asset's QR code appended.  The local
# storage directory and public base URL are used by the LocalQrStorage
# implementation to persist QR images and construct a public URL for
# retrieval.  These values are overridden in tests where necessary.
app:
  qr:
    scanBaseUrl: http://localhost:8080/scan
    storage:
      type: local
      local:
        dir: ${java.io.tmpdir}/asset-mcp-server/qr
        publicBaseUrl: http://localhost:${server.port}/qr-images
  cors:
    allowed-origins: http://localhost:8080,http://localhost:3000,http://localhost:5173
  # Enable the MCP server and expose tools over SSE.  Spring AI's
  # MCP server starter will auto-configure the necessary beans and
  # endpoints based on this configuration.  See the Spring AI
  # documentation for details.
  ai:
    mcp:
      server:
        enabled: true
        type: SYNC
        capabilities:
          tool: true
          resource: true
          prompt: true
        # SSE transport is exposed at this endpoint; clients connect
        # here to receive tool calls.
        sse-endpoint: /sse
        sse-message-endpoint: /mcp/message
