server:
  port: 8080

spring:
  datasource:
    # Datasource URL provided via environment variables.  Use the DB_HOST,
    # DB_PORT and DB_NAME variables to assemble a sensible default if
    # DATASOURCE_URL is not explicitly set.  The default points to a
    # PostgreSQL instance on localhost.  See README for details on
    # configuring these values for containerised or managed databases.
    url: ${DATASOURCE_URL:jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:agentdb}}
    driver-class-name: ${DATASOURCE_DRIVER_CLASS_NAME:org.postgresql.Driver}
    username: ${DATASOURCE_USERNAME:agent}
    password: ${DATASOURCE_PASSWORD:agent}
  jpa:
    hibernate:
      ddl-auto: update
    open-in-view: false

  ai:
    # Local MCP server for dev
    mcp:
      client:
        enabled: true
        type: SYNC
        toolcallback:
          enabled: true
        sse:
          connections:
            assetServer:
              url: http://localhost:8081
              sse-endpoint: /sse
    openai:
      # Dev fallback only; in prod, require a real secret via env.
      api-key: ${OPENAI_API_KEY}
      chat:
        options:
          model: gpt-4o
          temperature: 0.2
    chat:
      memory:
        repository:
          jdbc:
            initialize-schema: always
            table-name: spring_ai_chat_memory
            schema: public

# Dev-only basic auth defaults; override per-env in prod.
app:
  security:
    username: agent
    password: password

management:
  endpoints:
    web:
      # Wider exposure in dev so you can inspect env/config/metrics
      exposure:
        include: health,info,metrics,env,configprops,beans,loggers,threaddump,heapdump,mappings
  endpoint:
    health:
      show-details: always
    env:
      show-values: ALWAYS
    configprops:
      show-values: WHEN_AUTHORIZED
